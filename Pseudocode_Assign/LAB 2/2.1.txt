/************************************************************************
* File		: 2.1.txt
* Author name	: Capgemini
* Description	: applying good programming practices
* created on 	: 5/12/2017
* Version		: 3.0
************************************************************************/
Begin
	DECLARE User_ID AS INTEGER
	DECLARE User_name AS STRING
	DECLARE Last_month_reading AS INTEGER
	DECLARE Current_month_reading AS INTEGER
	DECLARE Unit_Consumed AS INTEGER
	DECLARE Net_Amount AS REAL
	CONSTANT FIXED_CHARG=100

	PROMPT "Enter the User_ID"STORE IN User_ID 
	PROMPT "Enter the User_name"STORE IN User_name
	PROMPT "Enter the Last Month Metre Reading"STORE IN Last_month_reading
	PROMPT "Enter the Current Month Metre Reading"STORE IN Current_month_reading
	Unit_Consumed=(Last_month_reading)-(Current_month_reading)
	
	Net_Amount=CALCULATE(Unit_Consumed)
	
	PRINT "User_ID:",User_ID
	PRINT "User_name:",User_name
	PRINT "Unit_Consumed:",Unit_Consumed
	PRINT "Net Amount:",Net_Amount

END

SUB CALCULATE
	DECLARE Amount AS INTEGER	
	
	Amount=Unit_Consumed*1.15+FIXED_CHARGE
	
	RETURN Amount

END SUB
---------------------------------------------------------------

BEGIN

	DECLARE Year_Of_Experience AS REAL
	DECLARE Tag_Color AS STRING
	
	PROMPT "Enter the Year of Experience"
	ACCEPT Year_Of_Experience
	GRADE(Year_Of_Experience)

END

SUB GRADE(Year_Of_Experience)
	IF(Year_Of_Experience>=0 && Year_Of_Experience<3)
    		DISPLAY "Blue"

	
	IF(Year_Of_Experience>=3 && Year_Of_Experience<5)
    		DISPLAY "Grey"

	
	IF(Year_Of_Experience>=5 && Year_Of_Experience<10)
    		DISPLAY "Yellow"

	
	IF(Year_Of_Experience>=10)
    		DISPLAY "RED"

END SUB

--------------------------------------------------------------

BEGIN

	DECLARE Number_Of_Terms AS INTEGER
	DECLARE First AS INTEGER
	DECLARE Second AS INTEGER
	INITIALIZE First TO 0
	INITIALIZE Second TO 1
	
	PROMPT "Enter the number of terms"
	ACCEPT Number_Of_Terms
	 
	PRINT First
	PRINT Second
	SERIES(FIRST,SECOND)
END
SUB SERIES(FIRST,SECOND)
	
	DECLARE Temp
 	FOR Index 3 TO Number_Of_Terms
		Temp=First+Second
		PRINT Temp
		First=Second
		Second=Temp
		PRINT TEMP
	END FOR
END SUB 

----------------------------------------------------------

BEGIN

	DECLARE Num AS INTEGER
	DECLARE Temp AS INTEGER
	DECLARE TempNum AS INTEGER
	
	INITIALIZE TempNum TO 0
	Temp=Num
	ARMSTRONG(TempNum,Temp)
	
	IF TempNum=NUM
		DISPLAY "Amstrong Number"
	ELSE
		DISPLAY "Not an Amstrong Number"
	END IF
END
	
SUB AMSTRONG(TempNum,Temp)	
		WHILE Temp!=0

			TempNum=Temp%10;
			TempNum+=TempNum*TempNum*TempNum
			Temp=Temp/10
		END WHILE
		
		RETURN TempNum
END SUB		
	
----------------------------------------------------------

BEGIN
	DECLARE BinaryNumber AS INTEGER
	DECLARE DecimalValue AS INTEGER
	DECLARE Remainder AS REAL
	INITIALIZE DecimalValue TO 0
	PROMPT"Enter Binary Number of 8 Digits"
	ACCEPT BinaryNumber
	
	FOR index 0 TO 7
		CALCULATE Remainder=BinaryNumber%10
		CALCULATE DecimalValue=DecimalValue+Remainder
		CALCULATE BinaryNumber=BinaryNumber/10
	END FOR
	PRINT DecimalValue
END 
----------------------------------------------------------------

 BEGIN
	
	DECLARE Num[10] AS INTEGER
	DECLARE Min AS INTEGER
	
	FOR Index 1 to 10
	      ACCEPT Num[Index]
	END FOR
	MIN(Num[])
	EVENODD(Num[])

END
SUB MIN(Num[])
	MIN=Num[0]
	FOR Index 1 to 10
		IF Num[Index]<Min
		Min=Num[Index]
	END FOR
	PRINT MIN
END SUB

SUB EVENODD(Num[])
	
	FOR iNDEX 1 TO 10
	
	IF Num[Index]%2==0
		PRINT "EVEN"
		PRINT "Num[Index]"
	ELSE
		PRINT "ODD"
		PRINT "Num[Index]"
	END IF
	END FOR
END SUB

--------------------------------------------------

BEGIN
	DECLARE Number[5] AS INTEGER ARRAY
	PROMPT "Enter the 5 numbers"
	DECLARE Sum,Temp1,Temp2,Temp3 AS INTEGER
	INITIALIZE Sum TO 0
	
	FOR INDEX 0 TO 4
		ACCEPT Number[Index]
	END FOR
	TRIPLET(Number[])

END
	
SUB TRIPLET(Number[])

	FOR index1 0 TO 4
	
		FOR index2 1 TO 3
			Temp1=Number[index1]
			Temp2=Number[index1+1]
			Temp3=(Number[index1+1+index2])%5
			Sum=Temp1+Temp2+Temp3 
			
			IF Sum=1
				PRINT Temp1,Temp2,Temp3	
		END FOR
	END FOR
END SUB

----------------------------------------------------------------

BEGIN
	DECLARE Price AS REAL
	DECLARE Totalcost AS REAL
	DECLARE CONSTANT TAX_RATE=0.56
	PROMPT "Enter the Price Of Product"
	ACCEPT Price
	COST(Price,TAX_RATE)
END

SUB COST(Price,TAX_RATE)
	Totalcost=Price*TAX_RATE
	PRINT "Total Price Of Product is:",Totalcost
END SUB

----------------------------------------------------------------.